source("analysis/useful.R")
install.packages(bootstrap)
install.packages('bootstrap')
source("analysis/useful.R")
d1 <- read.csv("data/info_e4_rep_data.csv")
d1$expt <- "replication"
d2 <- read.csv("data/info_e4_disambig_data.csv")
d2$expt <- "disambiguation"
d3 <- read.csv("data/info_e4_salience_data.csv")
d3$expt <- "salience"
d <- rbind(d1,d2,d3)
d$expt <- factor(d$expt, levels=c("replication","disambiguation","salience"))
d$age <- d$age_group
d$age[d$age >= 5] <- 4.99 # rounding error in the anonymization process
md <- melt(d, id.vars=c("SID","age","expt"),
measure.vars=names(d)[grepl("ambig",names(d)) |
grepl("inference",names(d))],
value.name = "correct")
md$trial <- as.numeric(str_sub(md$variable,2,2))
md$trial.type <- c("filler","inference")[as.numeric(grepl("inference",md$variable))+1]
# reverse disambiguation responses
# the disambiguation "inference" trials are coded as correct when
md$correct[md$expt=="disambiguation" & md$trial.type=="inference"] <- 1 - md$correct[md$expt=="disambiguation" & md$trial.type=="inference"]
mss <- aggregate(correct ~ trial.type + expt + age + SID,
md, mean)
mss$age_group <- factor(floor(mss$age))
ms <- ddply(mss, .(trial.type,expt,age_group),
summarise,
cil = ci.low(correct),
cih = ci.high(correct),
n = length(correct),
age = mean(age),
sd = sd(correct,na.rm=TRUE),
correct = mean(correct))
#quartz()
ggplot(ms, aes(x = age_group, y = correct, fill = trial.type)) +
geom_bar(stat="identity", position=position_dodge(.9)) +
geom_linerange(aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.9)) +
facet_wrap(~expt) +
xlab("Age Group (Years)") +
ylab("Proportion Inference Consistent") +
geom_hline(yintercept=.5, lty=2)
ggplot(ms, aes(x = age_group, y = correct, col = trial.type)) +
geom_pointrange(aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.9)) +
facet_wrap(~expt) +
xlab("Age Group (Years)") +
ylab("Proportion Inference Consistent") +
geom_hline(yintercept=.5, lty=2)
ggplot(mss, aes(x = age_group, y = correct, col = trial.type)) +
geom_jitter(alpha = .2, position = position_jitterdodge(jitter.width = .2,
jitter.height = .03,
dodge.width = .9)) +
facet_wrap(~expt) +
xlab("Age Group (Years)") +
ylab("Proportion Inference Consistent") +
geom_hline(yintercept=.5, lty=2)+
geom_pointrange(data = ms, aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.9))
ggplot(mss, aes(x = age_group, y = correct, col = trial.type)) +
geom_boxplot() +
facet_wrap(~expt) +
xlab("Age Group (Years)") +
ylab("Proportion Inference Consistent") +
geom_hline(yintercept=.5, lty=2)
ggplot(mss, aes(x = age_group, y = correct, col = trial.type)) +
geom_jitter(alpha = .2, position = position_jitterdodge(jitter.width = .2,
jitter.height = .03,
dodge.width = .9)) +
facet_wrap(~expt) +
xlab("Age Group (Years)") +
ylab("Proportion Inference Consistent") +
geom_hline(yintercept=.5, lty=2)+
geom_pointrange(data = ms, aes(ymin=correct-cil, ymax=correct+cih),
position=position_dodge(.9))
diamonds
ggplot(aes(x=color, y=clarity))
ggplot(diamonds, aes(x=color, y=clarity))
ggplot(diamonds, aes(x=carat, y=price, color=clarity))
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + facet_grid()
ggplot(diamonds, aes(x=carat, y=price, color=clarity)) + geom_point() + facet_grid(.~clarity)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + facet_grid(.~clarity)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + facet_grid(.~clarity) + ylim(0,25000)
library(tidyverse)
head(diamonds)
qplot(diamonds$carat, diamonds$price)
qplot(carat,price,data=diamonds)
qplot(carat,price,col=cut, data=diamonds)
?qplot
qplot(carat,price,col=cut, shape=clarity, data=diamonds)
d <- ggplot(diamonds, aes(x=carat, y=price)) # first you set the aesthetic and dataset
d + geom_point() # then you add geoms
d + geom_point(aes(colour = carat)) # and you can keep doing this to add layers to the plot
d <- ggplot(diamonds, aes(x=carat, y=price)) # first you set the aesthetic and dataset
+ geom_point(aes(colour = carat)) # and you can keep doing this to add layers to the plot
d <- ggplot(diamonds, aes(x=carat, y=price)) + geom_point(aes(colour = carat)) # and you can keep doing this to add layers to the plot
d <- ggplot(diamonds, aes(x=carat, y=price)) +
geom_point(aes(colour = carat))
ggplot(diamonds, aes(x=carat,y=price,col=cut, shape=clarity)) +
geom_point()
ggplot(diamonds, aes(x=carat,y=price,col=cut, shape=clarity)) +
geom_point() + facet_grid(x ~ y)
ggplot(diamonds, aes(x=carat,y=price)) +
geom_point() + facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat,y=price,col=clarity)) +
geom_point() + facet_wrap(~cut)
ggplot(diamonds, aes(x=carat, y=price)) +
geom_point(shape = ".") +
facet_grid(cut ~ clarity) + geom_smooth()
ggplot(diamonds, aes(x=carat, y=price)) +
geom_histogram() +
facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat)) +
geom_histogram() +
facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat)) +
geom_histogram() + geom_density()
ggplot(diamonds, aes(x=carat)) +
geom_histogram() + geom_density() + facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat)) +
geom_density() + facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat, col="red")) +
geom_density() + facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat, fill="red")) +
geom_density() + facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat, fill="red")) +
geom_histogram() + facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x=carat, fill="red")) +
geom_histogram() + facet_grid(cut ~ clarity) + geom_density()
ggplot(diamonds, aes(x=carat, fill="red")) +
geom_density() + facet_grid(cut ~ clarity)
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point() +
facet_wrap(~clarity) + ggthemese::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point() +
facet_wrap(~clarity) + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.3)) +
geom_point() +
facet_wrap(~clarity) + ggthemes::theme_few()
diamonds
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.1)) +
geom_point() +
facet_wrap(~clarity) + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.1, scale_color_brewer(type="cat"))) +
geom_point() +
facet_wrap(~clarity) + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.1, scale_color_brewer(type="cat"))) +
geom_point() +
facet_wrap(~clarity)
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.1, scale_color_brewer(type="category"))) +
geom_point() +
facet_wrap(~clarity)
scale_color_brewer()
?scale_color_brewer
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.1, scale_color_brewer(type="qual"))) +
geom_point() +
facet_wrap(~clarity)
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.1)) +
geom_point() +
facet_wrap(~clarity)
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.1)) +
geom_point() +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point() +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, pch = ".")) +
geom_point() +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, pch = "*")) +
geom_point() +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = "*") +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = "*",size=3) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=3) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.2)) +
geom_point(pch = ".",size=6) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, alpha=0.2)) +
geom_point(pch = ".",size=10) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=10, alpha=0.2) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=1, alpha=0.2) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
?geom_point
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=1, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=1, alpha=0.1) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=100, alpha=0.1) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=100, alpha=0.1) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=4, alpha=0.1) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=4, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=10, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch = ".",size=20, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(size=1, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(size=2, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(size=0.5, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(size=0.75, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch="o", size=0.75, alpha=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut)) +
geom_point(pch="o", size=1.0, alpha=0.75) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col = cut, fill=cut)) +
geom_point(pch="o", size=1.0, alpha=0.75) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, col = cut, fill=cut)) +
geom_point(pch="o", size=1.0, alpha=0.75) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, col = cut, fill=cut)) +
geom_point(pch="o", size=1.0,) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, col = cut, fill=cut)) +
geom_point(pch="o", size=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, col = cut, fill=cut)) +
geom_point(shape="o", size=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, col = cut, fill=cut)) +
geom_point(shape=21, size=1.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, col = cut, fill=cut)) +
geom_point(shape=21, size=2.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=2.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, col="none" fill=cut)) +
ggplot(head(diamonds), aes(x = carat, y = price, col="none", fill=cut)) +
geom_point(shape=21, size=2.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=2.0) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=2.0,col="none") +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(head(diamonds), aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=2.0,col="#00000000") +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=2.0,col="#00000000") +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=2.0,col="#00000000",alpha=0.1) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=1.0,col="#00000000",alpha=0.5) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=1.5,col="#00000000",alpha=0.5) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
7/4
pdf(width= 7, height = 4)
ggplot(diamonds, aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=1.5,col="#00000000",alpha=0.5) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
dev.off()
pdf
savePlot()
ggplot(diamonds, aes(x = carat, y = price, fill=cut)) +
geom_point(shape=21, size=1.5,col="#00000000",alpha=0.5) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few() + savePlot()
dev.off()
ggsave("plot.pdf")
ggsave("C:/Users/Jacob/classes/plot.pdf")
ggplot(diamonds, aes(x = carat, y = price, col=cut)) +
geom_point(shape=19, size=1.5,alpha=0.5) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few() + savePlot
ggplot(diamonds, aes(x = carat, y = price, col=cut)) +
geom_point(shape=19, size=1.5,alpha=0.5) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggsave("C:/Users/Jacob/classes/plot.pdf")
ggplot(diamonds, aes(x = carat, y = price, col=cut)) +
geom_point(shape=19, size=0.5,alpha=0.5) +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggsave("C:/Users/Jacob/classes/plot.pdf")
ggplot(diamonds, aes(x = carat, y = price, col=cut)) +
#geom_point(shape=19, size=0.5,alpha=0.5) +
geom_density() +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col=cut)) +
#geom_point(shape=19, size=0.5,alpha=0.5) +
geom_density2d() +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggsave("C:/Users/Jacob/classes/plot.pdf")
ggplot(diamonds, aes(x = carat, y = price, col=cut)) +
geom_point(shape=19, size=0.5,alpha=0.5) +
#geom_density2d() +
facet_wrap(~clarity) + scale_color_brewer(type="qual") + ggthemes::theme_few()
ggplot(diamonds, aes(x = carat, y = price, col=cut)) +
geom_point(shape=19, size=0.5,alpha=0.5) +
#geom_density2d() +
facet_wrap(~clarity) + ggthemes::theme_few()
ggsave("C:/Users/Jacob/classes/plot.pdf")
install.packages("simr")
colnames(d)
?colnames
View(d)
View(d)
colnames(d)
# two helper functions
sem <- function(x) {sd(x, na.rm = TRUE) / sqrt(sum(!is.na(x)))}
d <- read_csv("data/Ontogeny_fairness_seven_societies_data.csv",
na = c("NA", ".")) # they use . to indicate NA
d
d <- read_csv("data/Ontogeny_fairness_seven_societies_data.csv",
na = c("NA", ".")) # they use . to indicate NA
d <- read_csv("data/Ontogeny_fairness_seven_societies_data.csv",
na = c("NA", ".")) # they use . to indicate NA
# two helper functions
sem <- function(x) {sd(x, na.rm = TRUE) / sqrt(sum(!is.na(x)))}
d <- read_csv("data/Ontogeny_fairness_seven_societies_data.csv",
na = c("NA", ".")) # they use . to indicate NA
read.csv()
d <- read.csv("data/Ontogeny_fairness_seven_societies_data.csv",
na = c("NA", ".")) # they use . to indicate NA
facVars <- c("eq.uneq", "value", "decision")
d[, facVars] <- lapply(d[, facVars], factor)
d$trial.number <- as.numeric(gsub(".(\\d+)", "\\1", d$trial))
d$trial_type <- factor(d$eq.uneq,
levels = c("E","U"),
labels = c("Equal","Unequal"))
d$condition <- factor(d$condition,
levels = c("AI","DI"),
labels = c("Advantageous","Disadvantageous"))
colnames(d)
count
length
ggplot(x=decision) + geom_histogram()
library(ggplot2)
library(dplyr)
ggplot(x=decision) + geom_histogram()
ggplot(d,x=decision) + geom_histogram()
ggplot(d,aes(x=decision)) + geom_histogram()
ggplot(d,aes(x=decision)) + geom_histogram(stat="count")
d %>% group_by(country,decision) %>% summarize()
d %>% group_by(country) %>% summarize(percent = sum(decision==accept)/length(decision))
d %>% group_by(country) %>% summarize(percent = sum(decision=="accept")/length(decision))
d %>% group_by(country) %>% summarize(percent = sum(decision=="accept"))
d %>% group_by(country) %>% summarize(percent = count(decision=="accept"))
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_grid(~equal)
d %>% group_by(country) %>% summarize(percent = table(decision))
d %>% group_by(country)
d %>% group_by(country) %>% table(accept)
()
d %>% group_by(country) %>% table
d %>% group_by(country) %>% summarize(count = n(decision))
d %>% group_by(country) %>% summarize(count = n())
d %>% group_by(country, decision) %>% summarize(count = n())
d %>% group_by(country, decision, eq.uneq) %>% summarize(count = n())
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_grid(~equal)
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_wrap(~equal)
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_wrap(~eq.uneq)
d <- d %>% filter(eq.uneq != "NA")
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_wrap(~eq.uneq)
d <- d %>% filter(eq.uneq != "NA",decision != "NA")
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_wrap(~eq.uneq)
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_grid(country~eq.uneq)
d %>% group_by(country, eq.uneq) %>% summarize(frac = mean(decision="accept"))
d %>% group_by(country, eq.uneq) %>% summarize(frac = mean(decision=="accept"))
d %>% group_by(country, eq.uneq, age) %>% summarize(frac = mean(decision=="accept"))
colnames()
colnames(d)
d %>% group_by(country, eq.uneq, actor.age.years) %>% summarize(frac = mean(decision=="accept"))
ggplot(aes(x=actor.age.years, y=frac)) + geom_smooth
ggplot(d,aes(x=actor.age.years, y=frac)) + geom_smooth
ggplot(d,aes(x=actor.age.years, y=frac)) + geom_smooth()
d <- d %>% filter(eq.uneq != "NA",decision != "NA")
ggplot(d,aes(x=decision)) + geom_histogram(stat="count") + facet_grid(country~eq.uneq)
d %>% group_by(country, eq.uneq, actor.age.years) %>% summarize(frac = mean(decision=="accept"))
colnames(d)
ggplot(d,aes(x=actor.age.years, y=frac)) + geom_smooth()
d <- d %>% group_by(country, eq.uneq, actor.age.years) %>% summarize(frac = mean(decision=="accept"))
ggplot(d,aes(x=actor.age.years, y=frac)) + geom_smooth()
ggplot(d,aes(x=actor.age.years, y=frac)) + geom_point()
ggplot(d,aes(x=actor.age.years, y=frac, col=country)) + geom_point()
ggplot(d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth()
ggplot(d,aes(x=actor.age.years, y=frac)) + geom_smooth() + geom_point() + facet_wrap(~country)
ggplot(d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth() + geom_point() + facet_wrap(eq.uneq)
d <- d %>% group_by(country, eq.uneq, actor.age.years, trial_type) %>% summarize(frac = mean(decision=="accept"))
d <- d %>% filter(eq.uneq != "NA",decision != "NA")
```{r}
library(tidyverse)
# two helper functions
sem <- function(x) {sd(x, na.rm = TRUE) / sqrt(sum(!is.na(x)))}
ci95 <- function(x) {sem(x) * 1.96} # lazy normal approximation
d <- read.csv("data/Ontogeny_fairness_seven_societies_data.csv",
na = c("NA", ".")) # they use . to indicate NA
facVars <- c("eq.uneq", "value", "decision")
d[, facVars] <- lapply(d[, facVars], factor)
d$trial.number <- as.numeric(gsub(".(\\d+)", "\\1", d$trial))
d$trial_type <- factor(d$eq.uneq,
levels = c("E","U"),
labels = c("Equal","Unequal"))
d$condition <- factor(d$condition,
levels = c("AI","DI"),
labels = c("Advantageous","Disadvantageous"))
?geom_smooth()
?geom_line()
?geom_smooth()
frac_d <- filter_d %>% group_by(country, eq.uneq, actor.age.years, trial_type) %>% summarize(frac = mean(decision=="accept"))
filter_d <- d %>% filter(eq.uneq != "NA",decision != "NA")
frac_d <- filter_d %>% group_by(country, eq.uneq, actor.age.years, trial_type) %>% summarize(frac = mean(decision=="accept"))
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth() + geom_point() + facet_wrap(eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth() + geom_point() + facet_wrap(~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se="FALSE") + geom_point() + facet_wrap(~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + geom_point() + facet_wrap(~eq.uneq)
frac_d <- filter_d %>% group_by(country, eq.uneq, actor.age.years, trial_type) %>% summarize(frac = 1-mean(decision=="accept"))
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + geom_point() + facet_wrap(~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + facet_wrap(~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + facet_wrap(trial_type~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + facet_grid(trial_type~eq.uneq)
View(d)
View(d)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + facet_grid(value~eq.uneq)
frac_d <- filter_d %>% group_by(country, eq.uneq, actor.age.years, trial_type,value) %>% summarize(frac = 1-mean(decision=="accept"))
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + facet_grid(value~eq.uneq)
frac_d <- filter_d %>% group_by(country, eq.uneq, actor.age.years, condition) %>% summarize(frac = 1-mean(decision=="accept"))
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_smooth(se=FALSE) + facet_grid(condition~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_point() + facet_grid(condition~eq.uneq)
d
d %>% ggplot(aes(x=actor.age.years))
+ geom_hist()
d %>% ggplot(aes(x=actor.age.years)) + geom_histogram()
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_line() + facet_grid(condition~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_line() + facet_grid(condition~eq.uneq)
frac_d <- filter_d %>% group_by(country, eq.uneq, actor.age.years, condition) %>% summarize(frac = mean(decision=="accept"))
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_line() + facet_grid(condition~eq.uneq)
ggplot(frac_d,aes(x=actor.age.years, y=frac, col=country)) + geom_line() + facet_grid(eq.uneq~condition)
simr
library(simr)
?`simr-package`
setpwd
??pwd
setpwd
change_pwd
cd("C:/Users/jacob/classes/jakesch2019/writeup/")
setwd("C:/Users/jacob/classes/jakesch2019/writeup/")
??wd
responses <- read.csv(file="pilot_b_data_2_responses.csv") %>%
# filter out the Qualtrics header info lines
# select only the columns needed for the confirmatory analysis
filter(!between(row_number(),1,2)) %>%
# filter out participants who did not consent
# or who revoked consent after the debrief
# or who failed one of the two attention check questions
filter(
Consent == 'I CONSENT to take part in the study.',
debrief_agree == "I AGREE that the data collected during the study may be included for the purpose of the study.",
att_check_1 == "John is easy to see.",
att_check_2 == "I am traveling and the person in the profile offers to host me.",
(ai_comprehension == "Some were generated by the AI system, some were written by the host." | ai_comprehension == "")
) %>%
select(contains("profile_trust"), -contains("ai_score"), c("ResponseId"))
getwd()
ls
ls()
ls(getwd())
setwd("/Users/jacob/classes/jakesch2019/writeup")
ls(getwd())
setwd("/Users/jacob/classes/jakesch2019/writeup")
getwd
getwd()
setwd("/Users/jacob/classes/jakesch2019/writeup")
setwd("/Users/jacob/classes/jakesch2019/writeup2")
setwd("/Users/jacob/classes/jakesch2019/writeup")
getwd()
ls(getwd())
responses <- read.csv(file="pilot_b_data_2_responses.csv")
getwd()
1 + 1
.Last.Command
.Last.value
model = lme(meanScore ~ ai * condition, random=~ 1|ResponseId,data=processed_data)
